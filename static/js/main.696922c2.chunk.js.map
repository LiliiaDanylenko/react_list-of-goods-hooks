{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","EMPTY","sortGoods","setSortGoods","reverse","setReverse","actualGoods","setActualGoods","changeActualGoods","actual","sort","isReverse","reset","preparedGoods","good1","good2","ABC","localeCompare","LENGTH","length","className","type","cn","onClick","previous","JSON","stringify","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,SAAAA,E,qBAAAA,E,iBAAAA,M,KAQE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAmBH,EAASI,OAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BH,oBAAkB,GAAhD,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAAsCL,mBAAQ,UAAYF,IAA1D,mBAAOQ,EAAP,KAAoBC,EAApB,KAEA,SAASC,EACPC,EADF,GAIG,IAFCC,EAEF,EAFEA,KAAMC,EAER,EAFQA,UAAWC,EAEnB,EAFmBA,MAGbC,EAAa,YAAOJ,GAE1B,OAAIG,GACFL,EAAeE,GACfN,EAAaN,EAASI,OACtBI,GAAW,GAEJI,IAGLC,GACFG,EAAcH,MAAK,SAACI,EAAOC,GACzB,OAAQL,GACN,KAAKb,EAASmB,IAGZ,OAFAb,EAAaN,EAASmB,KAEfF,EAAMG,cAAcF,GAE7B,KAAKlB,EAASqB,OAGZ,OAFAf,EAAaN,EAASqB,QAEfJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXR,GACFE,EAAcT,UAGhBG,EAAeM,GAERA,GAGT,OACE,sBAAKO,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,iBAAkB,CAAE,WAAYpB,IAAcL,EAASmB,MAE5DO,QAAS,kBAAMf,EACbV,EACA,CAAEY,KAAMb,EAASmB,IAAKL,UAAWP,KAPrC,iCAaA,wBACEiB,KAAK,SACLD,UACEE,IAAG,oBAAqB,CACtB,WAAYpB,IAAcL,EAASqB,SAGvCK,QAAS,kBAAMf,EACbV,EACA,CAAEY,KAAMb,EAASqB,OAAQP,UAAWP,KATxC,4BAeA,wBACEiB,KAAK,SACLD,UACEE,IAAG,oBAAqB,CAAE,YAAwB,IAAZlB,IAExCmB,QAAS,WACPlB,GAAW,SAAAmB,GAAQ,OAAKA,KAExBhB,EACEV,EACA,CAAEY,KAAMR,EAAWS,WAAYP,KAVrC,qBAiBCqB,KAAKC,UAAUpB,KAAiBmB,KAAKC,UAAU5B,IAC9C,wBACEuB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EACEC,EAAkBV,EAAiB,CAAEc,OAAO,MALlD,sBAcJ,6BACE,6BACGN,EAAYqB,KAAI,SAAAC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cCxI5CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.696922c2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  EMPTY = '',\n  ABC = 'alphabetically',\n  LENGTH = 'length',\n}\n\ntype Goods = string[];\n\nexport const App: React.FC = () => {\n  const [sortGoods, setSortGoods] = useState<SortType>(SortType.EMPTY);\n  const [reverse, setReverse] = useState<boolean>(false);\n  const [actualGoods, setActualGoods] = useState<Goods>([...goodsFromServer]);\n\n  function changeActualGoods(\n    actual: Goods,\n    { sort, isReverse, reset }:\n    { sort?: SortType, isReverse?: boolean, reset?: boolean },\n  ) {\n    const preparedGoods = [...actual];\n\n    if (reset) {\n      setActualGoods(actual);\n      setSortGoods(SortType.EMPTY);\n      setReverse(false);\n\n      return actual;\n    }\n\n    if (sort) {\n      preparedGoods.sort((good1, good2) => {\n        switch (sort) {\n          case SortType.ABC:\n            setSortGoods(SortType.ABC);\n\n            return good1.localeCompare(good2);\n\n          case SortType.LENGTH:\n            setSortGoods(SortType.LENGTH);\n\n            return good1.length - good2.length;\n\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (isReverse) {\n      preparedGoods.reverse();\n    }\n\n    setActualGoods(preparedGoods);\n\n    return preparedGoods;\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button is-info', { 'is-light': sortGoods !== SortType.ABC })\n          }\n          onClick={() => changeActualGoods(\n            goodsFromServer,\n            { sort: SortType.ABC, isReverse: reverse },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-success', {\n              'is-light': sortGoods !== SortType.LENGTH,\n            })\n          }\n          onClick={() => changeActualGoods(\n            goodsFromServer,\n            { sort: SortType.LENGTH, isReverse: reverse },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-warning', { 'is-light': reverse === false })\n          }\n          onClick={() => {\n            setReverse(previous => !previous);\n\n            changeActualGoods(\n              goodsFromServer,\n              { sort: sortGoods, isReverse: !reverse },\n            );\n          }}\n        >\n          Reverse\n        </button>\n\n        {JSON.stringify(actualGoods) !== JSON.stringify(goodsFromServer) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setActualGoods(\n                changeActualGoods(goodsFromServer, { reset: true }),\n              );\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {actualGoods.map(good => <li key={good} data-cy=\"Good\">{good}</li>)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}